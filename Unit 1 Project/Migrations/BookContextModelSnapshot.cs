// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Unit_1_Project.Models;

#nullable disable

namespace Unit_1_Project.Migrations
{
    [DbContext(typeof(BookContext))]
    partial class BookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Unit_1_Project.Models.Book", b =>
                {
                    b.Property<int>("bookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookID"));

                    b.Property<string>("GenreID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("bookID");

                    b.HasIndex("GenreID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            bookID = 1,
                            GenreID = "A",
                            rating = 5,
                            title = "this is a title",
                            year = 1999
                        },
                        new
                        {
                            bookID = 2,
                            GenreID = "H",
                            rating = 1,
                            title = "this is also a title",
                            year = 1998
                        },
                        new
                        {
                            bookID = 3,
                            GenreID = "D",
                            rating = 4,
                            title = "title 3",
                            year = 2017
                        });
                });

            modelBuilder.Entity("Unit_1_Project.Models.Genre", b =>
                {
                    b.Property<string>("GenreID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreID = "A",
                            genre = "Action"
                        },
                        new
                        {
                            GenreID = "C",
                            genre = "Comedy"
                        },
                        new
                        {
                            GenreID = "D",
                            genre = "Drama"
                        },
                        new
                        {
                            GenreID = "H",
                            genre = "Horror"
                        });
                });

            modelBuilder.Entity("Unit_1_Project.Models.Book", b =>
                {
                    b.HasOne("Unit_1_Project.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
